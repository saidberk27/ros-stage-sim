<launch>
  <arg name="model" default="burger"/>

  <!-- Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find gazebo_ros)/worlds/empty.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- tb3_1 -->
  <group ns="tb3_1">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"/>
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model tb3_1 -x -2 -y 0 -z 0 -param robot_description" />
  </group>

  <!-- tb3_2 -->
  <group ns="tb3_2">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"/>
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model tb3_2 -x 2 -y 0 -z 0 -param robot_description" />
  </group>

  <!-- Nodes -->
  <node pkg="third_task" type="distance_service.py" name="distance_service"/>
  <node pkg="third_task" type="position_publisher.py" name="position_publisher"/>
  <node pkg="third_task" type="turtlebot3_pointop_key.py" name="pointop_controller"/>
</launch>